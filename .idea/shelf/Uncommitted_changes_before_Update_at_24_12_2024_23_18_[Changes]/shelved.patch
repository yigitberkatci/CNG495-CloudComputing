Index: Frontend/scripts.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//Getting current date function\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    var dt = new Date();\r\n    document.getElementById('schedule-date').innerHTML = dt.toLocaleDateString();\r\n});\r\n// Function to fetch timeslot data from the backend\r\ndocument.addEventListener('DOMContentLoaded', fetchTimeslotData);\r\n\r\nasync function fetchTimeslotData() {\r\n    try {\r\n        const response = await fetch('http://127.0.0.1:5000/timeslot'); // Update with your backend URL if different\r\n        const result = await response.json();\r\n\r\n        if (result.success) {\r\n            const scheduleData = result.data; // Data fetched from the backend\r\n            populateScheduler(scheduleData);\r\n        } else {\r\n            console.error(\"Error fetching timeslot data:\", result.error);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error:\", error);\r\n    }\r\n}\r\n\r\n// Function to populate the scheduler table\r\nfunction populateScheduler(scheduleData) {\r\n    const schedulerBody = document.getElementById('scheduler-body');\r\n    schedulerBody.innerHTML = ''; // Clear existing rows\r\n\r\n    scheduleData.forEach(slot => {\r\n        const row = document.createElement('tr');\r\n\r\n        const timeCell = document.createElement('td');\r\n        timeCell.innerText = `${slot.StartTime} - ${slot.EndTime}`;\r\n\r\n        const matchCell = document.createElement('td');\r\n        if (slot.Team1Name && slot.Team2Name) {\r\n            matchCell.innerText = `${slot.Team1Name} - ${slot.Team2Name}`;\r\n        } else {\r\n            matchCell.innerText = \"Available\";\r\n        }\r\n\r\n        const actionCell = document.createElement('td');\r\n        if (slot.IsBooked) {\r\n            actionCell.innerHTML = '<button class=\"booked\" disabled>Booked</button>';\r\n        } else {\r\n            actionCell.innerHTML = '<button class=\"book-now\">Book Now</button>';\r\n        }\r\n\r\n        row.appendChild(timeCell);\r\n        row.appendChild(matchCell);\r\n        row.appendChild(actionCell);\r\n\r\n        schedulerBody.appendChild(row);\r\n    });\r\n}\r\n\r\n// Call the function to fetch data when the page loads\r\n\r\n/*\r\n// Example data from database\r\nconst scheduleData = [\r\n    { time: \"17:00 - 18:00\", match: \"Liverpool - Manchester City\", isBooked: true },\r\n    { time: \"18:00 - 19:00\", match: \"\", isBooked: false },\r\n    { time: \"19:00 - 20:00\", match: \"\", isBooked: false },\r\n    { time: \"20:00 - 21:00\", match: \"\", isBooked: false },\r\n    { time: \"21:00 - 22:00\", match: \"\", isBooked: false },\r\n    { time: \"22:00 - 23:00\", match: \"\", isBooked: false },\r\n];\r\n\r\nconst schedulerBody = document.getElementById('scheduler-body');\r\n\r\nscheduleData.forEach(slot => {\r\n    const row = document.createElement('tr');\r\n\r\n    const timeCell = document.createElement('td');\r\n    timeCell.innerText = slot.time;\r\n\r\n    const matchCell = document.createElement('td');\r\n    matchCell.innerText = slot.match || \"Available\";\r\n\r\n    const actionCell = document.createElement('td');\r\n    if (slot.isBooked) {\r\n        actionCell.innerHTML = '<button class=\"booked\" disabled>Booked</button>';\r\n    } else {\r\n        actionCell.innerHTML = '<button class=\"book-now\">Book Now</button>';\r\n    }\r\n\r\n    row.appendChild(timeCell);\r\n    row.appendChild(matchCell);\r\n    row.appendChild(actionCell);\r\n\r\n    schedulerBody.appendChild(row);\r\n});\r\n*/\r\n\r\n//LIST OF TEAMS ASKING FOR MATCH\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    loadMatchRequestTeams();\r\n});\r\n\r\nasync function loadMatchRequestTeams() {\r\n    try {\r\n        const response = await fetch('http://127.0.0.1:5000/api/teams-asking-for-match');\r\n        const result = await response.json();\r\n\r\n        if (result.success) {\r\n            const teams = result.data;\r\n            const teamList = document.getElementById('match-request-team-list');\r\n            teamList.innerHTML = ''; // Clear any existing data\r\n\r\n            teams.forEach(team => {\r\n                const listItem = document.createElement('li');\r\n                listItem.textContent = team.Name;\r\n                teamList.appendChild(listItem);\r\n            });\r\n        } else {\r\n            console.error('Failed to load teams:', result.error);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching teams:', error);\r\n    }\r\n}\r\n//Booking PopUp\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Get modal and elements\r\n    const modal = document.getElementById('booking-modal');\r\n    const closeModal = modal.querySelector('.close');\r\n    const bookingForm = document.getElementById('booking-form');\r\n    const timeslotInput = document.getElementById('timeslot'); // Timeslot input field in modal\r\n  \r\n    // Add event listeners to \"Book Now\" buttons\r\n    document.querySelectorAll('.book-now').forEach((button, index) => {\r\n      button.addEventListener('click', (event) => {\r\n        const timeslot = event.target.closest('tr').querySelector('td').innerText; // Get timeslot from table row\r\n        timeslotInput.value = timeslot; // Set timeslot value in the modal\r\n        modal.style.display = 'flex'; // Show the modal\r\n      });\r\n    });\r\n  \r\n    // Close modal\r\n    closeModal.addEventListener('click', () => {\r\n      modal.style.display = 'none';\r\n    });\r\n  \r\n    // Submit booking form\r\n    bookingForm.addEventListener('submit', async (e) => {\r\n      e.preventDefault();\r\n  \r\n      const formData = new FormData(bookingForm);\r\n      const bookingData = {\r\n        team1: formData.get('team1'),\r\n        team2: formData.get('team2'),\r\n        timeslot: formData.get('timeslot'),\r\n      };\r\n  \r\n      try {\r\n        const response = await fetch('/booking', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(bookingData),\r\n        });\r\n        \r\n        const result = await response.json();\r\n        if (result.success) {\r\n          alert('Booking successful!');\r\n        } else {\r\n          alert('Booking failed: ' + result.error);\r\n        }\r\n      } catch (error) {\r\n        alert('Error submitting booking: ' + error.message);\r\n      }\r\n  \r\n      modal.style.display = 'none';\r\n    });\r\n  });\r\n\r\ndocument.addEventListener('DOMContentLoaded', fetchLeagueTableData);\r\nasync function fetchLeagueTableData() {\r\n    const response = await fetch('http://127.0.0.1:5000/rankings');\r\n    const result = await response.json();\r\n\r\n    if (result.success) {\r\n        const tableBody = document.getElementById('table-body');\r\n        tableBody.innerHTML = ''; // Clear previous rows\r\n\r\n        result.data.forEach((team, index) => {\r\n            const row = document.createElement('tr');\r\n\r\n            row.innerHTML = `\r\n                <td>${index + 1}</td>\r\n                <td>${team.Club}</td>\r\n                <td>${team.Played}</td>\r\n                <td>${team.Won}</td>\r\n                <td>${team.Lost}</td>\r\n                <td>${team.Drawn}</td>\r\n                <td>${team.GF}</td>\r\n                <td>${team.GA}</td>\r\n                <td>${team['Win %']}</td>\r\n            `;\r\n\r\n            tableBody.appendChild(row);\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/scripts.js b/Frontend/scripts.js
--- a/Frontend/scripts.js	(revision a477bcec01b1f49339cf390887652de3232aff08)
+++ b/Frontend/scripts.js	(date 1735074461099)
@@ -130,12 +130,12 @@
     const timeslotInput = document.getElementById('timeslot'); // Timeslot input field in modal
   
     // Add event listeners to "Book Now" buttons
-    document.querySelectorAll('.book-now').forEach((button, index) => {
-      button.addEventListener('click', (event) => {
-        const timeslot = event.target.closest('tr').querySelector('td').innerText; // Get timeslot from table row
-        timeslotInput.value = timeslot; // Set timeslot value in the modal
-        modal.style.display = 'flex'; // Show the modal
-      });
+    document.getElementById('scheduler-body').addEventListener('click', (event) => {
+        if (event.target && event.target.classList.contains('book-now')) {
+            const timeslot = event.target.closest('tr').querySelector('td').innerText; // Get timeslot from table row
+            timeslotInput.value = timeslot; // Set timeslot value in the modal
+            modal.style.display = 'flex'; // Show the modal
+        }
     });
   
     // Close modal
Index: Backend/db_config.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import mysql.connector\r\n\r\ndef get_db_connection():\r\n    return mysql.connector.connect(\r\n        host='soccermatchdb.craqsywqek0z.eu-north-1.rds.amazonaws.com',\r\n        user='admin',\r\n        password='',\r\n        database='SoccerMatch'\r\n    )\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/db_config.py b/Backend/db_config.py
--- a/Backend/db_config.py	(revision a477bcec01b1f49339cf390887652de3232aff08)
+++ b/Backend/db_config.py	(date 1735071615141)
@@ -4,6 +4,6 @@
     return mysql.connector.connect(
         host='soccermatchdb.craqsywqek0z.eu-north-1.rds.amazonaws.com',
         user='admin',
-        password='',
+        password='SoccerMatchDB',
         database='SoccerMatch'
     )
Index: AmazonSES/emailService.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import smtplib\r\nimport email.utils\r\nfrom email.mime.multipart import MIMEMultipart\r\nfrom email.mime.text import MIMEText\r\n\r\n\r\nclass emailService:\r\n    def __init__(self):\r\n        self.senderEmail = \"soccermatchscheduler@gmail.com\"\r\n        self.senderName = \"Soccer Match Scheduler\"\r\n        self.stmp_username = \"\"\r\n        self.stmp_password = \"\"\r\n        self.HOST = \"email-smtp.us-east-1.amazonaws.com\"\r\n        self.PORT = 587\r\n\r\n    def createMessage(self, type, receiverEmail, match_details):\r\n        subject = \"\"\r\n        body = \"\"\r\n\r\n        if type == \"generalRequest\":  # Team is looking for any match\r\n            subject = \"New General Match Request from SoccerMatchScheduler\"\r\n            #get the all team name data and show them\r\n            body = f\"\"\"<html>\r\n            <head></head>\r\n            <body>\r\n                <h1>{match_details['team']} is looking for any match</h1>\r\n                <h4>Other Teams Looking for a Match are as Follows:</h4>\r\n                <p>\r\n                    Please contact a team member if you want to play!<br>\r\n                    Also don't for get to book the timeslot if you want to play!\r\n                </p>\r\n                \r\n            </body>\r\n            </html>\"\"\"\r\n\r\n        elif type == \"specialRequest\":  # Team wants to play with a specific team\r\n            subject = \"New Special Match Request from SoccerMatchScheduler\"\r\n            body = f\"\"\"<html>\r\n            <head></head>\r\n            <body>\r\n            \r\n                <h1>{match_details['team1']} wants to match with your team</h1>\r\n                <h4>Match Details are as follows:</h4>\r\n                <p>\r\n                    Date: {match_details['date']}<br>\r\n                    Time: {match_details['time']}<br>\r\n                    Match: {match_details['team1']} vs {match_details['team2']}<br>\r\n                </p>\r\n                \r\n                </p>\r\n            </body>\r\n            </html>\"\"\"\r\n\r\n        msg = MIMEMultipart('alternative')\r\n        msg['Subject'] = subject\r\n        msg['From'] = email.utils.formataddr((self.senderName, self.senderEmail))\r\n        msg['To'] = receiverEmail\r\n        part = MIMEText(body, 'html')\r\n        msg.attach(part)\r\n        return msg.as_string()\r\n\r\n    def sendMessage(self, type, receiverEmail, match_details):\r\n        \"\"\"\r\n        Sends the email using the SMTP server.\r\n\r\n        Args:\r\n        type (str): Type of match request ('generalRequest' or 'specialRequest').\r\n        receiverEmail (str): Recipient's email address.\r\n        match_details (dict): Dictionary containing match details.\r\n        \"\"\"\r\n        try:\r\n            server = smtplib.SMTP(self.HOST, self.PORT)\r\n            server.ehlo()\r\n            server.starttls()\r\n            server.ehlo()\r\n            server.login(self.stmp_username, self.stmp_password)\r\n            server.sendmail(\r\n                self.senderEmail,\r\n                receiverEmail,\r\n                self.createMessage(type, receiverEmail, match_details)\r\n            )\r\n            server.close()\r\n        except Exception as e:\r\n            print(\"Error: \", e)\r\n        else:\r\n            print(\"Email sent!\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/AmazonSES/emailService.py b/AmazonSES/emailService.py
--- a/AmazonSES/emailService.py	(revision a477bcec01b1f49339cf390887652de3232aff08)
+++ b/AmazonSES/emailService.py	(date 1735071615141)
@@ -8,8 +8,8 @@
     def __init__(self):
         self.senderEmail = "soccermatchscheduler@gmail.com"
         self.senderName = "Soccer Match Scheduler"
-        self.stmp_username = ""
-        self.stmp_password = ""
+        self.stmp_username = "AKIA2LIP2CXYTJDVBHGG"
+        self.stmp_password = "BH5wZZ7ehafr83CJns+mHMFzZFCzfCvx7oteiPYjXA10"
         self.HOST = "email-smtp.us-east-1.amazonaws.com"
         self.PORT = 587
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"65369a6a-bed1-458d-be00-143af3760ec2\" name=\"Changes\" comment=\"Find Opponent Backend implementation and Booking correction\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/AmazonSES/emailService.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/AmazonSES/emailService.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Backend/db_config.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Backend/db_config.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {}\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/yigitberkatci/CNG495-CloudComputing.git&quot;,\r\n    &quot;accountId&quot;: &quot;b975ea3d-28a8-4fe7-ac95-a12c78398db0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 1\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2pf90NbvnX1xWDoxwA5usHBIv0S\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;JavaScript Debug.register.html.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.app.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Python&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\ilgin\\odtü\\cng495\\CNG495-CloudComputing\\Frontend\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-PY-243.21565.199\" />\r\n        <option value=\"bundled-python-sdk-cab1f2013843-4ae2d6a61b08-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.21565.199\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"65369a6a-bed1-458d-be00-143af3760ec2\" name=\"Changes\" comment=\"\" />\r\n      <created>1733146039083</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1733146039083</updated>\r\n      <workItem from=\"1733146040340\" duration=\"5158000\" />\r\n      <workItem from=\"1733154507331\" duration=\"3709000\" />\r\n      <workItem from=\"1733240190863\" duration=\"2485000\" />\r\n      <workItem from=\"1733250357513\" duration=\"3914000\" />\r\n      <workItem from=\"1733325934171\" duration=\"16000\" />\r\n      <workItem from=\"1734509968905\" duration=\"2190000\" />\r\n      <workItem from=\"1734522530403\" duration=\"674000\" />\r\n      <workItem from=\"1734612642480\" duration=\"1988000\" />\r\n      <workItem from=\"1734614647024\" duration=\"3524000\" />\r\n      <workItem from=\"1734964159019\" duration=\"7918000\" />\r\n      <workItem from=\"1734980009707\" duration=\"3123000\" />\r\n      <workItem from=\"1735040775010\" duration=\"14597000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Connection codes for Flask connection\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733150564866</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733150564866</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Frontend directory/folder creation\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733154236433</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733154236433</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Backend first commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733154652370</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733154652370</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Backend first commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733254784208</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733254784208</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"README update and SQL file added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733254893773</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733254893773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"README update and Reports added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734510550139</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734510550139</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Changes is database structure and booking operation added (notification trigger not included)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734618772396</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734618772396</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Get Teams Asking For Match updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734980314440</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734980314440</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Timeslot table Frontend and Backend connection\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735054291497</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735054291497</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Team Information Page added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735056601109</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735056601109</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Find Opponent Backend implementation and Booking correction\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735070806003</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735070806003</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"main\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first commit\" />\r\n    <MESSAGE value=\"Connection codes for Flask connection\" />\r\n    <MESSAGE value=\"Frontend directory/folder creation\" />\r\n    <MESSAGE value=\"Backend first commit\" />\r\n    <MESSAGE value=\"README update and SQL file added\" />\r\n    <MESSAGE value=\"README update and Reports added\" />\r\n    <MESSAGE value=\"Changes is database structure and booking operation added (notification trigger not included)\" />\r\n    <MESSAGE value=\"Get Teams Asking For Match updated\" />\r\n    <MESSAGE value=\"Timeslot table Frontend and Backend connection\" />\r\n    <MESSAGE value=\"Team Information Page added\" />\r\n    <MESSAGE value=\"Find Opponent Backend implementation and Booking correction\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Find Opponent Backend implementation and Booking correction\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/CNG495_CloudComputing$app.coverage\" NAME=\"app Coverage Results\" MODIFIED=\"1735070404637\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Backend\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a477bcec01b1f49339cf390887652de3232aff08)
+++ b/.idea/workspace.xml	(date 1735075093445)
@@ -4,10 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="65369a6a-bed1-458d-be00-143af3760ec2" name="Changes" comment="Find Opponent Backend implementation and Booking correction">
+    <list default="true" id="65369a6a-bed1-458d-be00-143af3760ec2" name="Changes" comment="-">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/AmazonSES/emailService.py" beforeDir="false" afterPath="$PROJECT_DIR$/AmazonSES/emailService.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Backend/db_config.py" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/db_config.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/scripts.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/scripts.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -108,7 +109,7 @@
       <workItem from="1734614647024" duration="3524000" />
       <workItem from="1734964159019" duration="7918000" />
       <workItem from="1734980009707" duration="3123000" />
-      <workItem from="1735040775010" duration="14597000" />
+      <workItem from="1735040775010" duration="16447000" />
     </task>
     <task id="LOCAL-00001" summary="Connection codes for Flask connection">
       <option name="closed" value="true" />
@@ -198,7 +199,15 @@
       <option name="project" value="LOCAL" />
       <updated>1735070806003</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="-">
+      <option name="closed" value="true" />
+      <created>1735071211273</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1735071211273</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -254,9 +263,10 @@
     <MESSAGE value="Timeslot table Frontend and Backend connection" />
     <MESSAGE value="Team Information Page added" />
     <MESSAGE value="Find Opponent Backend implementation and Booking correction" />
-    <option name="LAST_COMMIT_MESSAGE" value="Find Opponent Backend implementation and Booking correction" />
+    <MESSAGE value="-" />
+    <option name="LAST_COMMIT_MESSAGE" value="-" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/CNG495_CloudComputing$app.coverage" NAME="app Coverage Results" MODIFIED="1735070404637" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Backend" />
+    <SUITE FILE_PATH="coverage/CNG495_CloudComputing$app.coverage" NAME="app Coverage Results" MODIFIED="1735074190031" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Backend" />
   </component>
 </project>
\ No newline at end of file
