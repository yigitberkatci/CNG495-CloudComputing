Index: Backend/app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, jsonify, request\r\nfrom db_config import get_db_connection\r\nfrom hashlib import sha256\r\nfrom flask_cors import CORS\r\nfrom datetime import datetime\r\nfrom AmazonSES.emailService import emailService\r\n\r\napp = Flask(__name__)\r\nCORS(app)\r\n\r\n@app.route('/')\r\ndef index():\r\n    return \"SoccerMatch Scheduler API is running!\"\r\n\r\n@app.route('/timeslot', methods=['GET'])\r\ndef get_timeslot():\r\n    try:\r\n        connection = get_db_connection()\r\n        cursor = connection.cursor(dictionary=True)  #data as dictionary\r\n\r\n        query = \"\"\"\r\n                SELECT \r\n                    ts.TimeSlotID,\r\n                    ts.StartTime,\r\n                    ts.EndTime,\r\n                    ts.IsBooked,\r\n                    ts.MatchID,\r\n                    t1.Name AS Team1Name,\r\n                    t2.Name AS Team2Name\r\n                FROM TimeSlot ts\r\n                LEFT JOIN SoccerMatch sm ON ts.MatchID = sm.MatchID\r\n                LEFT JOIN Team t1 ON sm.Team1ID = t1.TeamID\r\n                LEFT JOIN Team t2 ON sm.Team2ID = t2.TeamID\r\n                WHERE ts.IsBooked = TRUE\r\n                ORDER BY ts.StartTime;\r\n                \"\"\"\r\n        cursor.execute(query)\r\n        timeslots = cursor.fetchall()\r\n\r\n        cursor.close()\r\n        connection.close()\r\n\r\n        return jsonify({\"success\": True, \"data\": timeslots}), 200\r\n    except Exception as e:\r\n        return jsonify({\"success\": False, \"error\": str(e)}), 500\r\n\r\n@app.route('/login', methods=['POST'])\r\ndef login():\r\n    try:\r\n        data = request.get_json()\r\n        email = data.get('email')\r\n        password = data.get('password')\r\n\r\n        if not email or not password:\r\n            return jsonify({\"success\": False, \"message\": \"Email and password are required\"}), 400\r\n\r\n        connection = get_db_connection()\r\n        cursor = connection.cursor(dictionary=True)\r\n\r\n        query = \"SELECT Password FROM Team WHERE Email = %s\"\r\n        cursor.execute(query, (email,))\r\n        user = cursor.fetchone()\r\n\r\n        cursor.close()\r\n        connection.close()\r\n\r\n        if not user:\r\n            return jsonify({\"success\": False, \"message\": \"Invalid email or password\"}), 401\r\n\r\n        #hashing using SHA256\r\n        hashed_password = sha256(password.encode('utf-8')).hexdigest()\r\n\r\n        #password verify\r\n        if hashed_password != user['Password']:\r\n            return jsonify({\"success\": False, \"message\": \"Invalid email or password\"}), 401\r\n\r\n        return jsonify({\"success\": True, \"message\": \"Login successful\"}), 200\r\n\r\n    except Exception as e:\r\n        return jsonify({\"success\": False, \"error\": str(e)}), 500\r\n\r\n@app.route('/register', methods=['POST'])\r\ndef register():\r\n    try:\r\n        data = request.get_json()\r\n        team_name = data.get('team_name')\r\n        email = data.get('email')\r\n        password = data.get('password')\r\n\r\n        if not team_name or not email or not password:\r\n            return jsonify({\"success\": False, \"message\": \"Team name, email, and password are required\"}), 400\r\n\r\n        #hash with SHA256\r\n        hashed_password = sha256(password.encode('utf-8')).hexdigest()\r\n\r\n        connection = get_db_connection()\r\n        cursor = connection.cursor()\r\n\r\n        query = \"SELECT * FROM Team WHERE Email = %s\"\r\n        cursor.execute(query, (email,))\r\n        existing_user = cursor.fetchone()\r\n\r\n        if existing_user:\r\n            return jsonify({\"success\": False, \"message\": \"Email already exists\"}), 409\r\n\r\n        query = \"INSERT INTO Team (Name, Email, Password) VALUES (%s, %s, %s)\"\r\n        cursor.execute(query, (team_name, email, hashed_password))\r\n        connection.commit()\r\n\r\n        cursor.close()\r\n        connection.close()\r\n\r\n        return jsonify({\"success\": True, \"message\": \"Registration successful\"}), 201\r\n\r\n    except Exception as e:\r\n        return jsonify({\"success\": False, \"error\": str(e)}), 500\r\n@app.route(\"/booking\", methods=['POST'])\r\ndef booking():\r\n    service = emailService()\r\n    try:\r\n        data = request.get_json()\r\n        team1 = data.get('team1')\r\n        team2 = data.get('team2')\r\n        timeslot = data.get('timeslot')\r\n\r\n        match_details = {\r\n            \"date\": datetime.now(),\r\n            \"time\": datetime.now().time(),\r\n            \"team1\": team1,\r\n            \"team2\": team2  # Optional for generalRequest\r\n        }\r\n\r\n        connection = get_db_connection()\r\n        cursor = connection.cursor()\r\n\r\n        if team2 is None:  # General request\r\n            type = \"generalRequest\"\r\n            msg = f\"Team {team1} is looking for opponents!\"\r\n\r\n            # Get ID of team1\r\n            query = \"SELECT TeamID FROM Team WHERE Name = %s\"\r\n            cursor.execute(query, (team1,))\r\n            team1ID = cursor.fetchone()\r\n            if team1ID:\r\n                team1ID = team1ID[0]  # Extract value from tuple\r\n            else:\r\n                return jsonify({\"success\": False, \"error\": \"Team1 not found\"}), 400\r\n\r\n            # Get TimeSlot ID\r\n            query = \"SELECT TimeSlotID FROM TimeSlot WHERE StartTime = %s\"\r\n            cursor.execute(query, (timeslot,))\r\n            timeslotID = cursor.fetchone()\r\n            if timeslotID:\r\n                timeslotID = timeslotID[0]  # Extract value from tuple\r\n            else:\r\n                return jsonify({\"success\": False, \"error\": \"Timeslot not found\"}), 400\r\n\r\n            # Get all email addresses\r\n            query2 = \"SELECT Email FROM Team\"\r\n            cursor.execute(query2)\r\n            receiverEmails = [email[0] for email in cursor.fetchall()]  # Extract emails as a list\r\n\r\n            # Send the email to all teams\r\n            for receiverEmail in receiverEmails:\r\n                service.sendMessage(type, receiverEmail, match_details)\r\n\r\n            # Insert into Notification table\r\n            query = \"INSERT INTO Notification (SenderID, Message, TimeSlotID, Date, NotificationType) VALUES (%s, %s, %s, %s, %s)\"\r\n            values = (team1ID, msg, timeslotID, datetime.now(), type)\r\n\r\n        else:  # Special request\r\n            type = \"specialRequest\"\r\n            msg = f\"Team {team1} wants to play a match with your team!\"\r\n\r\n            # Get IDs of both teams\r\n            query = \"SELECT TeamID FROM Team WHERE Name = %s\"\r\n            cursor.execute(query, (team1,))\r\n            team1ID = cursor.fetchone()\r\n            if team1ID:\r\n                team1ID = team1ID[0]  # Extract value from tuple\r\n            else:\r\n                return jsonify({\"success\": False, \"error\": \"Team1 not found\"}), 400\r\n\r\n            cursor.execute(query, (team2,))\r\n            team2ID = cursor.fetchone()\r\n            if team2ID:\r\n                team2ID = team2ID[0]  # Extract value from tuple\r\n            else:\r\n                return jsonify({\"success\": False, \"error\": \"Team2 not found\"}), 400\r\n\r\n            # Get TimeSlot ID\r\n            query = \"SELECT TimeSlotID FROM TimeSlot WHERE StartTime = %s\"\r\n            cursor.execute(query, (timeslot,))\r\n            timeslotID = cursor.fetchone()\r\n            if timeslotID:\r\n                timeslotID = timeslotID[0]  # Extract value from tuple\r\n            else:\r\n                return jsonify({\"success\": False, \"error\": \"Timeslot not found\"}), 400\r\n\r\n            # Get email of team2\r\n            query = \"SELECT Email FROM Team WHERE Name = %s\"\r\n            cursor.execute(query, (team2,))\r\n            receiverEmail = cursor.fetchone()\r\n            if receiverEmail:\r\n                receiverEmail = receiverEmail[0]  # Extract email value\r\n            else:\r\n                return jsonify({\"success\": False, \"error\": \"Receiver email not found\"}), 400\r\n\r\n            # Send the email to the specific team\r\n            service.sendMessage(type, receiverEmail, match_details)\r\n\r\n            # Insert into Notification table\r\n            query = \"INSERT INTO Notification (SenderID, ReceiverID, TimeSlotID, Message, Date, NotificationType) VALUES (%s, %s, %s, %s, %s, %s)\"\r\n            values = (team1ID, team2ID, timeslotID, msg, datetime.now(), type)\r\n\r\n        # Execute the final insert query\r\n        cursor.execute(query, values)\r\n        connection.commit()\r\n\r\n        return jsonify({\"success\": True, \"message\": \"Booking successful\"}), 201\r\n\r\n    except Exception as e:\r\n        print(f\"Error occurred: {e}\")\r\n        return jsonify({\"success\": False, \"error\": str(e)}), 500\r\n    finally:\r\n        cursor.close()\r\n        connection.close()\r\n\r\n\r\n@app.route('/api/teams-asking-for-match', methods=['GET'])\r\ndef get_teams_asking_for_match():\r\n    try:\r\n        connection = get_db_connection()\r\n        cursor = connection.cursor(dictionary=True)\r\n\r\n        query = \"SELECT Name FROM Team WHERE isAskingForMatch = TRUE\"\r\n        cursor.execute(query)\r\n        teams = cursor.fetchall()\r\n        cursor.close()\r\n        connection.close()\r\n\r\n        return jsonify({\"success\": True, \"data\": teams}), 200\r\n    except Exception as e:\r\n        return jsonify({\"success\": False, \"error\": str(e)}), 500\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='0.0.0.0', port=5000)\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/app.py b/Backend/app.py
--- a/Backend/app.py	(revision 9cc573748abbd67cfb77d155ee0a0934c8bbcf1f)
+++ b/Backend/app.py	(date 1735045123922)
@@ -20,11 +20,9 @@
 
         query = """
                 SELECT 
-                    ts.TimeSlotID,
                     ts.StartTime,
                     ts.EndTime,
                     ts.IsBooked,
-                    ts.MatchID,
                     t1.Name AS Team1Name,
                     t2.Name AS Team2Name
                 FROM TimeSlot ts
Index: Backend/db_config.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import mysql.connector\r\n\r\ndef get_db_connection():\r\n    return mysql.connector.connect(\r\n        host='localhost',\r\n        user='root',\r\n        password='AsRs*20I',\r\n        database='SoccerMatch'\r\n    )\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/db_config.py b/Backend/db_config.py
--- a/Backend/db_config.py	(revision 9cc573748abbd67cfb77d155ee0a0934c8bbcf1f)
+++ b/Backend/db_config.py	(date 1734980667126)
@@ -4,6 +4,6 @@
     return mysql.connector.connect(
         host='localhost',
         user='root',
-        password='AsRs*20I',
+        password='',
         database='SoccerMatch'
     )
Index: .idea/CNG495-CloudComputing.iml
===================================================================
diff --git a/.idea/CNG495-CloudComputing.iml b/.idea/CNG495-CloudComputing.iml
deleted file mode 100644
--- a/.idea/CNG495-CloudComputing.iml	(revision 9cc573748abbd67cfb77d155ee0a0934c8bbcf1f)
+++ /dev/null	(revision 9cc573748abbd67cfb77d155ee0a0934c8bbcf1f)
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module version="4">
-  <component name="PyDocumentationSettings">
-    <option name="format" value="PLAIN" />
-    <option name="myDocStringFormat" value="Plain" />
-  </component>
-  <component name="TemplatesService">
-    <option name="TEMPLATE_FOLDERS">
-      <list>
-        <option value="$MODULE_DIR$/Backend/templates" />
-      </list>
-    </option>
-  </component>
-  <component name="TestRunnerService">
-    <option name="PROJECT_TEST_RUNNER" value="py.test" />
-  </component>
-</module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"65369a6a-bed1-458d-be00-143af3760ec2\" name=\"Changes\" comment=\"Changes is database structure and booking operation added (notification trigger not included)\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Backend/app.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Backend/app.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Backend/db.sql\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Backend/db.sql\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Backend/db_config.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Backend/db_config.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Frontend/scripts.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/scripts.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {}\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/yigitberkatci/CNG495-CloudComputing.git&quot;,\r\n    &quot;accountId&quot;: &quot;b975ea3d-28a8-4fe7-ac95-a12c78398db0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2pf90NbvnX1xWDoxwA5usHBIv0S\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;JavaScript Debug.register.html.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.app.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;advanced.settings&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\ilgin\\odtü\\cng495\\CNG495-CloudComputing\\Frontend\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-PY-243.21565.199\" />\r\n        <option value=\"bundled-python-sdk-cab1f2013843-4ae2d6a61b08-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.21565.199\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"65369a6a-bed1-458d-be00-143af3760ec2\" name=\"Changes\" comment=\"\" />\r\n      <created>1733146039083</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1733146039083</updated>\r\n      <workItem from=\"1733146040340\" duration=\"5158000\" />\r\n      <workItem from=\"1733154507331\" duration=\"3709000\" />\r\n      <workItem from=\"1733240190863\" duration=\"2485000\" />\r\n      <workItem from=\"1733250357513\" duration=\"3914000\" />\r\n      <workItem from=\"1733325934171\" duration=\"16000\" />\r\n      <workItem from=\"1734509968905\" duration=\"2190000\" />\r\n      <workItem from=\"1734522530403\" duration=\"674000\" />\r\n      <workItem from=\"1734612642480\" duration=\"1988000\" />\r\n      <workItem from=\"1734614647024\" duration=\"3524000\" />\r\n      <workItem from=\"1734964159019\" duration=\"7918000\" />\r\n      <workItem from=\"1734980009707\" duration=\"252000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Connection codes for Flask connection\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733150564866</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733150564866</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Frontend directory/folder creation\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733154236433</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733154236433</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Backend first commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733154652370</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733154652370</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Backend first commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733254784208</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733254784208</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"README update and SQL file added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733254893773</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733254893773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"README update and Reports added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734510550139</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734510550139</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Changes is database structure and booking operation added (notification trigger not included)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734618772396</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734618772396</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first commit\" />\r\n    <MESSAGE value=\"Connection codes for Flask connection\" />\r\n    <MESSAGE value=\"Frontend directory/folder creation\" />\r\n    <MESSAGE value=\"Backend first commit\" />\r\n    <MESSAGE value=\"README update and SQL file added\" />\r\n    <MESSAGE value=\"README update and Reports added\" />\r\n    <MESSAGE value=\"Changes is database structure and booking operation added (notification trigger not included)\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Changes is database structure and booking operation added (notification trigger not included)\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/CNG495_CloudComputing$app.coverage\" NAME=\"app Coverage Results\" MODIFIED=\"1734980131598\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Backend\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9cc573748abbd67cfb77d155ee0a0934c8bbcf1f)
+++ b/.idea/workspace.xml	(date 1735051757720)
@@ -4,12 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="65369a6a-bed1-458d-be00-143af3760ec2" name="Changes" comment="Changes is database structure and booking operation added (notification trigger not included)">
+    <list default="true" id="65369a6a-bed1-458d-be00-143af3760ec2" name="Changes" comment="Get Teams Asking For Match updated">
+      <change beforePath="$PROJECT_DIR$/.idea/CNG495-CloudComputing.iml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Backend/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/app.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Backend/db.sql" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/db.sql" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Backend/db_config.py" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/db_config.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/scripts.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/scripts.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -74,7 +73,7 @@
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
     &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
     &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;advanced.settings&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Python&quot;,
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
 }</component>
@@ -109,7 +108,8 @@
       <workItem from="1734612642480" duration="1988000" />
       <workItem from="1734614647024" duration="3524000" />
       <workItem from="1734964159019" duration="7918000" />
-      <workItem from="1734980009707" duration="252000" />
+      <workItem from="1734980009707" duration="3123000" />
+      <workItem from="1735040775010" duration="1780000" />
     </task>
     <task id="LOCAL-00001" summary="Connection codes for Flask connection">
       <option name="closed" value="true" />
@@ -167,7 +167,15 @@
       <option name="project" value="LOCAL" />
       <updated>1734618772396</updated>
     </task>
-    <option name="localTasksCounter" value="8" />
+    <task id="LOCAL-00008" summary="Get Teams Asking For Match updated">
+      <option name="closed" value="true" />
+      <created>1734980314440</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1734980314440</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -192,9 +200,10 @@
     <MESSAGE value="README update and SQL file added" />
     <MESSAGE value="README update and Reports added" />
     <MESSAGE value="Changes is database structure and booking operation added (notification trigger not included)" />
-    <option name="LAST_COMMIT_MESSAGE" value="Changes is database structure and booking operation added (notification trigger not included)" />
+    <MESSAGE value="Get Teams Asking For Match updated" />
+    <option name="LAST_COMMIT_MESSAGE" value="Get Teams Asking For Match updated" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/CNG495_CloudComputing$app.coverage" NAME="app Coverage Results" MODIFIED="1734980131598" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Backend" />
+    <SUITE FILE_PATH="coverage/CNG495_CloudComputing$app.coverage" NAME="app Coverage Results" MODIFIED="1734980589463" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Backend" />
   </component>
 </project>
\ No newline at end of file
